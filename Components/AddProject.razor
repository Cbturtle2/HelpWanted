@using Microsoft.AspNetCore.Components.Web;
@using HelpWanted.Models;
@using HelpWanted.Services;
@using System.IO;
@using System.Text;
@using MongoDB.Bson;

<div align="center">
    <div>
        <input placeholder="Project Name" @bind="projName">
    </div>
    <div>
        <input placeholder="Project Description" @bind="projDesc">
    </div>
    <div>
        <select id="helpType" name="helpType" @bind="helpType">
            @{
                Enums.HelpTypes[] helpTypes = Enum.GetValues<Enums.HelpTypes>(); 
                for(int i = 0; i < helpTypes.Count(); i++)
                {
                    <option value="@helpTypes[i]">
                        @helpTypes[i]
                    </option>
                }
            }
        </select>
    </div>
    @if(helpType != Enums.HelpTypes.None)
    {
        <div>
            <input placeholder="Help Needed" @bind="helpWanted">
        </div>
        <div>
            <input placeholder="Skills Needed" @bind="helpSkills">
        </div>
    }
    <div>
        <input placeholder = "Team Members" @bind="teamMembers">
    </div>
    <div>
        <select id="progress" name="progress" @bind="progress">
            @{
                Enums.Progress[] progresses = Enum.GetValues<Enums.Progress>(); 
                for(int i = 0; i < progresses.Count(); i++)
                {
                    <option value="@progresses[i]">
                        @progresses[i]
                    </option>
                }
            }
        </select>
    </div>
    <div>
        <input placeholder="Contact Info" @bind="contactInfo">
    </div>
    <div>
        <button @onclick="Submit" align="center">
            Submit
        </button>
    </div>
</div>


@code{
    string projName;
    string projDesc;
    string helpWanted;
    string teamMembers;
    Enums.Progress progress;
    Enums.HelpTypes helpType;
    string contactInfo;
    string helpSkills;

    void Submit()
    {
        if(projName == null )
        {
            return;
        }

        string[] teamArray = new string[0];
        string[] skillsArray = new string[0];

        if(teamMembers != null)
        {
            teamArray = teamMembers.Split(',');
        }
        if(helpSkills != null)
        {
            skillsArray = helpSkills.Split(',');
        }
        Project newProj = new Project(Project.UserName, projName, projDesc, helpWanted, skillsArray, helpType, teamArray, progress);

        MongoDBAccess mongoDBAccess = new MongoDBAccess(MongoDBAccess.databaseName);

        mongoDBAccess.AddItem<Project>(MongoDBAccess.collectionName, newProj);

        projName = null;
        projDesc = null;
        helpWanted = null;
        helpType = 0;
        progress = 0;
        contactInfo = null;
    }
}